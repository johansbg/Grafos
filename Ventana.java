/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laboratorio2.johanburgos;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author johan
 */
public class Ventana extends javax.swing.JFrame {
    Grafo g = new Grafo();
    private FontMetrics fm = null;
    int sw = 1;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        dibujardenuevo();
        this.setLocationRelativeTo(null);
        Imagen im = new Imagen(Grafico);
        Grafico.add(im).repaint();
        Origen.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent arg0) {
                rellenaCombo2((String) Origen.getSelectedItem());
        }
        });
    }
    public void llenarComboB(){
        for (Vertice v : g.vertices) {
            Origen.addItem(v.getDato());
        }
    }
    private void rellenaCombo2(String seleccionEnCombo1) {
     Destino.removeAllItems();
     for (Vertice v : g.vertices) {
            if (v.adyacente!=null && !v.getDato().equals(seleccionEnCombo1)) {
                if (VerAdyacentes(v.getDato(), seleccionEnCombo1)) {
                    Destino.addItem(v.getDato());
                }
            }else{
                if (v.adyacente==null && !v.getDato().equals(seleccionEnCombo1)) {
                    Destino.addItem(v.getDato());
                }
            }
     }
     
    }
    public boolean VerAdyacentes(String i,String dato){
        Vertice v = g.vertices.get(g.BuscarV(i));
        for (Vertice a : v.adyacente) {
            if (a.getDato().equals(dato)) {
                return false;
            }
        }
        return true;
    }
    
    public void GraficarV(int x , int y , Vertice v ){
            Graphics2D gra = (Graphics2D) Grafico.getGraphics();
            gra.setFont( new Font( "Tahoma", Font.BOLD, 18 ) );
            fm = gra.getFontMetrics();
            int width = fm.stringWidth(v.getDato()+"");
            gra.drawRect(x, y, width + 6, fm.getHeight());
            gra.drawString(v.getDato()+"", x + 3, y + (fm.getLeading() + fm.getAscent()));
    }
    public void GraficarE(int x , int y , Vertice v ){
            Graphics2D gra = (Graphics2D) Grafico.getGraphics();
            gra.setFont( new Font( "Tahoma", Font.BOLD, 18 ) );
            fm = gra.getFontMetrics();
            int width = fm.stringWidth(v.getDato()+"");
            gra.drawString(v.getDato()+"", x + 3, y + (fm.getLeading() + fm.getAscent()));
            gra.setColor(Color.yellow);
            gra.drawRect(x, y, width + 6, fm.getHeight());
    }
    private final int ARR_SIZE = 4; 

    public  void drawArrow(int x1, int y1, int x2, int y2 , String costo) { 
       Graphics2D g = (Graphics2D) Grafico.getGraphics();
       double dx = x2 - x1, dy = y2 - y1; 
       double angle = Math.atan2(dy, dx); 
       int len = (int) Math.sqrt(dx*dx + dy*dy); 
       AffineTransform at = AffineTransform.getTranslateInstance(x1, y1); 
       at.concatenate(AffineTransform.getRotateInstance(angle)); 
       g.transform(at); 
       g.drawLine(0, 0, len, 0); 
       g.fillPolygon(new int[] {len, len-ARR_SIZE, len-ARR_SIZE, len}, 
           new int[] {0, -ARR_SIZE, ARR_SIZE, 0}, 4); 
       g.drawString(costo, x2-x1, y2 - y1);
      } 
    public void dibujardenuevo(){
        for (Vertice v : g.vertices) {
            GraficarV(v.getX(), v.getY(), v);
            for (int i = 0; i < v.adyacente.size(); i++) {
                Vertice ve= v.adyacente.get(i);
                String costo= Integer.toString(v.Pesos.get(i));
                drawArrow(ve.getX(), ve.getY(), ve.getFX(), ve.getFY(), costo);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Origen = new javax.swing.JComboBox<>();
        Destino = new javax.swing.JComboBox<>();
        Grafico = new javax.swing.JPanel();
        Costo = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Origen :");

        jLabel2.setText("Destino :");

        jLabel3.setText("Costo :");

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Buscar Camino minimo");

        jLabel4.setText("Seleccione la Posicion de sus ciudades");

        Grafico.setBackground(new java.awt.Color(0, 255, 255));
        Grafico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GraficoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout GraficoLayout = new javax.swing.GroupLayout(Grafico);
        Grafico.setLayout(GraficoLayout);
        GraficoLayout.setHorizontalGroup(
            GraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        GraficoLayout.setVerticalGroup(
            GraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Costo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Grafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Grafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(Origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Vertice V = g.vertices.get(g.BuscarV(Origen.getItemAt(Origen.getSelectedIndex())));
        Vertice VD = g.vertices.get(g.BuscarV(Destino.getItemAt(Destino.getSelectedIndex())));
        g.Vdestino(V, VD, (int) Costo.getValue());
        drawArrow(V.getX(), V.getY(), VD.getX(), VD.getY(),Costo.getValue().toString());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GraficoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GraficoMouseClicked
        if (sw==1) {
            String nombre = JOptionPane.showInputDialog("Digite El nombre de la Ciudad");
            Graphics2D gra = (Graphics2D) Grafico.getGraphics();
            fm = gra.getFontMetrics();
            int width = fm.stringWidth(nombre+"");
            Vertice v = new Vertice(nombre, evt.getX(), evt.getY(), width + 6, fm.getHeight());
            if (g.VerificarV(v) == false ) {
                if (g.VerificarCoordenadas(evt.getX(), evt.getY(), width + 6, fm.getHeight())==false) {
                    GraficarV(evt.getX(), evt.getY(), v);
                    g.Vorigen(v);
                    Origen.removeAllItems();
                    llenarComboB();
                }else{
                    JOptionPane.showMessageDialog(null, "No se puede Dibujar en esta area");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ciudad ya creada");
            }
        }else{
            if (sw==2) {
                Vertice v = g.vertices.get(g.BuscarV(g.VerificarSeleccion(evt.getX(), evt.getY())));
                System.out.println(""+v.getDato());
                Graphics2D gra = (Graphics2D) Grafico.getGraphics();
                fm = gra.getFontMetrics();
                int width = fm.stringWidth(v.getDato()+"");
                GraficarE(v.getX(), v.getY(), v);
                String sel = JOptionPane.showInputDialog("Desea eliminar este vertice (Digite :SI para eliminar o Digite NO para cancelar");
                if (sel.equals("SI")) {
                    JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
                    g.eliminarV(g.BuscarV(g.VerificarSeleccion(evt.getX(), evt.getY())));
                }else{
                    if (sel.equals("NO")) {
                        JOptionPane.showMessageDialog(null, "Accion cancelada");
                    }else{
                        JOptionPane.showMessageDialog(null, "Dato mal digitado");
                    }
                }
                Grafico.repaint();
                this.dispose();
                JOptionPane.showMessageDialog(null, "Grafo actualizado");
                this.setVisible(true);
            }
        }
    }//GEN-LAST:event_GraficoMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JOptionPane.showMessageDialog(null, "Seleccione la ciudad a eliminar");
        sw=2;
        
    }//GEN-LAST:event_jButton3ActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Costo;
    private javax.swing.JComboBox<String> Destino;
    private javax.swing.JPanel Grafico;
    private javax.swing.JComboBox<String> Origen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
